import json
import logging
import boto3
from botocore.exceptions import ClientError
from qdrant_client import QdrantClient
from qdrant_client.http import models

# Initialize clients
ssm = boto3.client('ssm')
logging.basicConfig(level=logging.ERROR)

def get_qdrant_credentials():
    """Fetch Qdrant credentials from AWS SSM"""
    try:
        response = ssm.get_parameters(
            Names=['qdrant_url', 'qdrant_api_key'],
            WithDecryption=True
        )
        params = {p['Name']: p['Value'] for p in response['Parameters']}
        return params.get('qdrant_url'), params.get('qdrant_api_key')
    except Exception as e:
        logging.error(f"Error getting Qdrant credentials: {str(e)}")
        return None, None

def lambda_handler(event, context):
    try:
        # Parse input
        if 'body' not in event:
            return {'status_code': 400, 'message': 'No body found in the request'}
        
        body = json.loads(event['body'])
        access_key = body.get('access_key')
        
        if not access_key:
            return {'status_code': 400, 'message': 'No access_key provided'}

        # Get Qdrant credentials
        qdrant_url, qdrant_api_key = get_qdrant_credentials()
        if not qdrant_url or not qdrant_api_key:
            return {'status_code': 500, 'message': 'Failed to get Qdrant credentials'}

        # Initialize Qdrant client
        client = QdrantClient(
            url=qdrant_url,
            api_key=qdrant_api_key,
        )

        # Create collection
        client.create_collection(
            collection_name=access_key,
            vectors_config=models.VectorParams(
                size=384,  # Matching text-embedding-3-small
                distance=models.Distance.COSINE,
            ),
        )

        return {
            'status_code': 200,
            'message': f'Collection {access_key} created successfully'
        }

    except Exception as e:
        logging.error(f"Collection creation failed: {str(e)}")
        return {
            'status_code': 500,
            'message': f'Collection creation failed: {str(e)}',
        }